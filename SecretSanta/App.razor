@using SecretSanta.Domain
@using SecretSanta.Domain.State
@inject TelegramAuth Auth
@inject UserSantaEvents SantaEvents
@implements IDisposable

<LayoutView Layout="@typeof(MainLayout)">
<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <div class="container md:w-6/12 w-full mx-auto p-10">
            @if (!Auth.IsLoggedIn)
            {
                <LoginWithTelegram/>
            }
            else
            {
                <CascadingValue Value="Auth.Login!">
                    <RouteView RouteData="@routeData" />
                </CascadingValue>
                <div><h2 class="text-xs mt-10">You are currently logged in as <i>@@@Auth.Login.Login</i>. <a class="text-blue-500 underline cursor-pointer" @onclick="LogOut">Log out</a> </h2></div>
                <div><h2 class="text-xs">This app is open source. You can check the code <a class="text-blue-500 underline cursor-pointer" href="https://github.com/kostya9/SecretSanta" target="_blank">at GitHub</a> </h2></div>
                <div><h2 class="text-xs text-blue-500 underline cursor-pointer"><NavLink href="/credits">Picture credits</NavLink></h2></div>
            }
        </div>
    </Found>
    <NotFound>
        <p>Sorry, there's nothing at this address.</p>
    </NotFound>
</Router>
</LayoutView>

@code
{
    protected override void OnInitialized()
    {
        Auth.AuthChanged += OnAuthChanged;

        base.OnInitialized();
    }

    private void OnAuthChanged(object? sender, EventArgs args)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        Auth.AuthChanged -= OnAuthChanged;
    }

    private void LogOut()
    {
        Auth.Logout();
        SantaEvents.Clear();
    }
}